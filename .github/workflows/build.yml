name: Android CI Cross-Build (aarch64-linux-android, macOS, custom android.py, as13.patch)

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:

jobs:
  android-ci:
    runs-on: macos-14

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_VERSION: "27.3.13750724"
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-sdk/ndk/27.3.13750724
      COMPRESSION_LIBS_URL: "https://github.com/George-Codr/Yer/releases/download/compression_libs/compression-libs-aarch64-android.tar.gz"

    steps:
      - name: Install basic tools
        run: |
          if ! command -v brew &>/dev/null; then
            echo "Installing Homebrew..."
            NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            eval "$(/opt/homebrew/bin/brew shellenv)" || eval "$(/usr/local/bin/brew shellenv)"
          fi
          brew update
          brew install wget curl git cmake pkg-config autoconf automake libtool unzip

      - name: Download compression libraries
        run: |
          mkdir -p libs
          wget -O compression-libs.tar.gz "$COMPRESSION_LIBS_URL"
          tar xf compression-libs.tar.gz -C libs
          echo "COMPRESSION_LIBS_PATH=$PWD/libs" >> $GITHUB_ENV

      - name: Download Android SDK Command Line Tools
        run: |
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          wget -O sdk.zip "https://dl.google.com/android/repository/commandlinetools-mac-11076708_latest.zip"
          unzip -q sdk.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
          rm sdk.zip

      - name: Accept Android SDK licenses and install NDK & platform-tools
        run: |
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" \
            "platform-tools" "ndk;${ANDROID_NDK_VERSION}"

      - name: Add NDK toolchain binaries to PATH
        run: |
          TOOLCHAIN=$ANDROID_HOME/ndk/${ANDROID_NDK_VERSION}/toolchains/llvm/prebuilt/darwin-x86_64/bin
          echo "$TOOLCHAIN" >> $GITHUB_PATH
          echo "LLVM_PROFDATA=$TOOLCHAIN/llvm-profdata" >> $GITHUB_ENV
          $TOOLCHAIN/llvm-profdata --version

      - name: Checkout python/cpython (branch 3.13)
        uses: actions/checkout@v4
        with:
          repository: python/cpython
          ref: 3.13
          path: cpython

      - name: Download custom android.py
        run: |
          curl -L 'https://raw.githubusercontent.com/George-Codr/Yer/refs/heads/main/android.py' -o cpython/Android/android.py
          chmod +x cpython/Android/android.py

      - name: Download and apply as13.patch
        working-directory: cpython
        run: |
          curl -L 'https://raw.githubusercontent.com/plfj/py-build/7f18a2a580e6cb495c11c9cab220e9ab1b37c1ef/as13.patch' -o as13.patch
          git apply as13.patch

      - name: Install Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Set up NDK clang environment
        run: |
          set -e
          ndk="$ANDROID_HOME/ndk/$ANDROID_NDK_VERSION"
          if ! [ -d "$ndk" ]; then
              echo "NDK not found, installing..."
              yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" "ndk;$ANDROID_NDK_VERSION"
          fi
          
          HOST="aarch64-linux-android"
          ANDROID_API_LEVEL=21
          clang_triplet="$HOST"
          
          TOOLCHAIN=$(echo "$ndk/toolchains/llvm/prebuilt/"*)
          export PATH="$TOOLCHAIN/bin:$PATH"
          
          export AR="$TOOLCHAIN/bin/llvm-ar"
          export AS="$TOOLCHAIN/bin/llvm-as"
          export CC="$TOOLCHAIN/bin/${clang_triplet}${ANDROID_API_LEVEL}-clang"
          export CXX="${CC}++"
          export LD="$TOOLCHAIN/bin/ld"
          export NM="$TOOLCHAIN/bin/llvm-nm"
          export RANLIB="$TOOLCHAIN/bin/llvm-ranlib"
          export READELF="$TOOLCHAIN/bin/llvm-readelf"
          export STRIP="$TOOLCHAIN/bin/llvm-strip"
          export LLVM_PROFDATA="$TOOLCHAIN/bin/llvm-profdata"

      - name: Run CI cross-build for aarch64-linux-android
        working-directory: cpython/Android
        env:
          COMPRESSION_LIBS_PATH: ${{ env.COMPRESSION_LIBS_PATH }}
        run: |
          ./android.py ci aarch64-linux-android
