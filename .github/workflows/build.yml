name: Android CI Cross-Build (aarch64-linux-android, macOS, custom android.py, as13.patch)

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:

jobs:
  android-ci:
    runs-on: macos-latest

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      ANDROID_NDK_VERSION: "27.3.13750724"
      ANDROID_NDK_HOME: ${{ github.workspace }}/android-sdk/ndk/27.3.13750724

    steps:
      - name: Ensure Homebrew is installed
        run: |
          if ! command -v brew &>/dev/null; then
            echo "Homebrew not found. Installing..."
            NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
            eval "$(/opt/homebrew/bin/brew shellenv)" || eval "$(/usr/local/bin/brew shellenv)"
          else
            echo "Homebrew is already installed."
          fi
          brew --version

      - name: Ensure tar is available
        run: |
          if ! command -v tar &>/dev/null; then
            echo "tar not found, installing..."
            brew install tar
          fi
          tar --version

      - name: Install llvm (for llvm-profdata and clang)
        run: |
          brew install llvm
          echo "/opt/homebrew/opt/llvm/bin" >> $GITHUB_PATH
          /opt/homebrew/opt/llvm/bin/llvm-profdata --version || true

      - name: Download and unpack prebuilt compression libs
        run: |
          mkdir -p $GITHUB_WORKSPACE/android-libs/aarch64-linux-android
          wget -O compression-libs-aarch64-android.tar.gz \
          "https://github.com/George-Codr/Yer/releases/download/compression_libs/compression-libs-aarch64-android.tar.gz"
          tar -xzf compression-libs-aarch64-android.tar.gz -C $GITHUB_WORKSPACE/android-libs/aarch64-linux-android --strip-components=1

      - name: Verify unpacked files
        run: |
          find $GITHUB_WORKSPACE/android-libs/aarch64-linux-android

      - name: Checkout python/cpython (branch 3.13)
        uses: actions/checkout@v4
        with:
          repository: python/cpython
          ref: 3.13
          path: cpython

      - name: Download custom android.py (overwrite)
        run: |
          curl -L 'https://raw.githubusercontent.com/Aasyaco/Some/main/android.py' -o cpython/Android/android.py
          chmod +x cpython/Android/android.py

      - name: Download and apply as13.patch
        working-directory: cpython
        run: |
          curl -L 'https://raw.githubusercontent.com/plfj/py-build/7f18a2a580e6cb495c11c9cab220e9ab1b37c1ef/as13.patch' -o as13.patch
          git apply as13.patch

      - name: Set up Python 3
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel

      - name: Install Homebrew dependencies
        run: |
          brew install wget curl git cmake pkg-config autoconf automake libtool

      - name: Download Android SDK Command Line Tools
        run: |
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          wget -O sdk.zip "https://dl.google.com/android/repository/commandlinetools-mac-11076708_latest.zip"
          unzip -q sdk.zip -d "$ANDROID_HOME/cmdline-tools"
          mv "$ANDROID_HOME/cmdline-tools/cmdline-tools" "$ANDROID_HOME/cmdline-tools/latest"
          rm sdk.zip

      - name: Accept Android SDK licenses and install NDK and platform-tools
        run: |
          yes | "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --licenses
          "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" --sdk_root="$ANDROID_HOME" "platform-tools" "ndk;${ANDROID_NDK_VERSION}"

      - name: Add Android tools to PATH
        run: |
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/ndk/${ANDROID_NDK_VERSION}" >> $GITHUB_PATH

      - name: Run CI cross-build for aarch64-linux-android
        working-directory: cpython/Android
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
        run: |
          ./android.py ci aarch64-linux-android
