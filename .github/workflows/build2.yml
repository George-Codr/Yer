name: Build Fully Static Android Python

on:
  workflow_dispatch:
  push:
    branches: [main, '3.*', Try]
  pull_request:
    branches: [main, '3.*']

jobs:
  build-static:
    name: Build Static Python (${{ matrix.version }})
    runs-on: macos-14
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix:
        include:
          - version: 3.13
            branch: 3.13
          - version: 3.14
            branch: 3.14
          - version: 3.15
            branch: main

    env:
      ARCH: aarch64
      API: 21
      ANDROID_HOME: /Users/runner/Library/Android/sdk

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Android SDK & NDK
        run: |
          set -euxo pipefail
          # Download Android command-line tools
          curl -L https://dl.google.com/android/repository/commandlinetools-mac-11076708_latest.zip -o cmdline-tools.zip
          mkdir -p $ANDROID_HOME/cmdline-tools
          unzip -q cmdline-tools.zip -d $ANDROID_HOME/cmdline-tools
          
          # Accept licenses
          mkdir -p $ANDROID_HOME/licenses
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $ANDROID_HOME/licenses/android-sdk-license
          echo "84831b9409646a918e30573bab4c9c91346d8abd" > $ANDROID_HOME/licenses/android-sdk-preview-license
          echo "d975f751698b51a0c1248a6993fecb955d3f1b3f" > $ANDROID_HOME/licenses/android-sdk-arm-dbt-license
          
          # Install SDK & NDK
          $ANDROID_HOME/cmdline-tools/cmdline-tools/bin/sdkmanager --sdk_root=$ANDROID_HOME "platform-tools" "ndk;25.2.9519653" || true

      - name: Cache NDK
        uses: actions/cache@v4
        with:
          path: $ANDROID_HOME/ndk
          key: ndk-static-${{ runner.os }}-${{ hashFiles('.github/workflows/build-static-android.yml') }}

      - name: Checkout CPython repository
        uses: actions/checkout@v5
        with:
          repository: python/cpython
          ref: ${{ matrix.branch }}
          path: cpython-${{ matrix.version }}
          fetch-depth: 1

      - name: Apply patches (only 3.13)
        if: matrix.version == '3.13'
        working-directory: ./cpython-${{ matrix.version }}
        run: |
          set -euxo pipefail
          curl -L https://raw.githubusercontent.com/yubrajbhoi/termux-python/refs/heads/main/termux.patch -o termux.patch
          curl -L https://raw.githubusercontent.com/plfj/py-build/refs/heads/main/as13.patch -o as13.patch
          git apply ./termux.patch || echo "⚠️ termux.patch apply failed — continuing."
          git apply ./as13.patch || echo "⚠️ as13.patch apply failed — continuing."

      - name: Build static CPython for Android
        working-directory: ./cpython-${{ matrix.version }}/Android
        run: |
          set -euxo pipefail
          
          export NDK_HOME=$ANDROID_HOME/ndk/25.2.9519653
          export TOOLCHAIN=$NDK_HOME/toolchains/llvm/prebuilt/darwin-x86_64
          export TARGET=aarch64-linux-android
          export CC=$TOOLCHAIN/bin/${TARGET}${API}-clang
          export CXX=$TOOLCHAIN/bin/${TARGET}${API}-clang++
          export AR=$TOOLCHAIN/bin/llvm-ar
          export LD=$TOOLCHAIN/bin/ld.lld
          export RANLIB=$TOOLCHAIN/bin/llvm-ranlib
          export STRIP=$TOOLCHAIN/bin/llvm-strip
          export PATH=$TOOLCHAIN/bin:$PATH
          
          export CFLAGS="-fPIC -static"
          export LDFLAGS="-static"
          
          ./android.py ci --fast-ci aarch64-linux-android -- --without-shared --without-static-libpython
          echo "✅ Static build finished for Python ${{ matrix.version }}"
          ls -lh ../cross-build/aarch64-linux-android/dist || echo "⚠️ Package output not found"

      - name: Verify static binary
        working-directory: ./cpython-${{ matrix.version }}/cross-build/aarch64-linux-android
        run: |
          set -euxo pipefail
          BINARY=$(find prefix -name python -type f -executable || find install -name python -type f -executable)
          if [ -z "$BINARY" ]; then
            echo "⚠️ Python binary not found"
            exit 1
          fi
          file "$BINARY" | grep -q "statically linked" || (echo "⚠️ Binary is not statically linked" && exit 1)
          echo "✅ Verified static binary: $BINARY"

      - name: Upload static Python archive
        uses: actions/upload-artifact@v4
        with:
          name: python-static-${{ matrix.version }}
          path: cpython-${{ matrix.version }}/cross-build/aarch64-linux-android/dist/python-*.tar.gz
          if-no-files-found: error
          
