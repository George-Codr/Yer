name: Build and Release Custom LLVM 21.1.3 for Android NDK r29

on:
  push:
    tags:
      - 'v*'  # Trigger release on pushing a tag like v1.0.0
    branches:  # Trigger build on every push to any branch
      - 'rew'   # Matches all branches

permissions:
  contents: write  # Required for creating releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 build-essential git cmake ninja-build curl unzip libxml2-dev pkg-config zlib1g-dev jq p7zip-full bzip2

      - name: Download Android NDK r29
        run: |
          NDK_URL="https://dl.google.com/android/repository/android-ndk-r29-linux.zip"
          curl -f -o android-ndk-r29-linux.zip "$NDK_URL" || {
            echo "Error: Failed to download NDK from $NDK_URL. Check if the URL is still valid or try https://developer.android.com/ndk/downloads"
            exit 1
          }
          unzip android-ndk-r29-linux.zip -d $HOME
          export NDK=$HOME/android-ndk-r29
          echo "NDK=$NDK" >> $GITHUB_ENV

      - name: Download LLVM 21.1.3 source
        run: |
          LLVM_URL="https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-21.1.3.zip"
          curl -f -L -o llvmorg-21.1.3.zip "$LLVM_URL" || {
            echo "Error: Failed to download LLVM source from $LLVM_URL."
            exit 1
          }
          unzip llvmorg-21.1.3.zip -d $GITHUB_WORKSPACE
          mv llvm-project-llvmorg-21.1.3 llvm-project

      - name: Initialize Git in LLVM source
        run: |
          cd $GITHUB_WORKSPACE/llvm-project
          git init
          git add .
          git commit -m "Initial commit for LLVM 21.1.3"

      - name: Download PATCHES.json
        run: |
          curl -o PATCHES.json https://android.googlesource.com/toolchain/llvm_android/+/main/patches/PATCHES.json

      - name: Extract ongoing patches
        run: |
          jq '[.[] | select(.version_range.until == null) | .rel_patch_path]' PATCHES.json > patches_list.json

      - name: Apply Android patches
        run: |
          cd $GITHUB_WORKSPACE/llvm-project
          PATCH_BASE_URL="https://android.googlesource.com/toolchain/llvm_android/+/main/patches"
          jq -r '.[]' ../patches_list.json | while read -r rel_path; do
            echo "Applying patch: $rel_path"
            curl -o patch.b64 "$PATCH_BASE_URL/$rel_path?format=TEXT"
            base64 -d patch.b64 > patch.patch
            git apply --verbose patch.patch || echo "Warning: Failed to apply $rel_path"
            rm patch.b64 patch.patch
          done

      - name: Configure LLVM build
        run: |
          cd $GITHUB_WORKSPACE/llvm-project
          mkdir build && cd build
          cmake ../llvm \
            -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_PROJECTS="clang;lld;compiler-rt;libcxx;libcxxabi" \
            -DLLVM_TARGETS_TO_BUILD="X86;ARM;AArch64" \
            -DLLVM_ENABLE_RUNTIMES="libcxx" \
            -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/llvm21-install \
            -DCMAKE_C_COMPILER=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/clang \
            -DCMAKE_CXX_COMPILER=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++ \
            -DANDROID_NDK=$NDK \
            -DLLVM_ANDROID_USE_NDK_SYSROOT=ON \
            -DLLVM_USE_LINKER=lld \
            -DCMAKE_MAKE_PROGRAM=ninja \
            -DLLVM_INCLUDE_TESTS=OFF \
            -DLLVM_INCLUDE_EXAMPLES=OFF \
            -DLLVM_INCLUDE_DOCS=OFF \
            -DLLVM_INCLUDE_BENCHMARKS=OFF \
            -DLLVM_BUILD_TESTS=OFF

      - name: Build and install LLVM
        run: |
          cd $GITHUB_WORKSPACE/llvm-project/build
          ninja -j$(nproc)
          ninja install

      - name: Minimize installation
        run: |
          cd $GITHUB_WORKSPACE
          mkdir minimal-llvm
          cp -r llvm21-install/bin minimal-llvm/ || true
          cp -r llvm21-install/include minimal-llvm/ || true
          cp -r llvm21-install/lib minimal-llvm/ || true
          cp -r llvm21-install/share minimal-llvm/ || true
          # Strip binaries and libraries to reduce size
          find minimal-llvm -type f \( -name '*.so*' -o -name '*.a' \) -exec strip --strip-unneeded {} + || true
          find minimal-llvm -type f -executable -not -name '*.sh' -exec strip {} + || true
          # Remove unnecessary files if present (e.g., docs, tests)
          rm -rf minimal-llvm/share/man minimal-llvm/share/doc minimal-llvm/lib/cmake || true

      - name: Package the minimal build in multiple formats
        run: |
          cd $GITHUB_WORKSPACE
          BASE_NAME="llvm21.1.3-android-ndk-r29-linux"
          # Create .zip
          zip -r $BASE_NAME.zip minimal-llvm
          # Create .tar.gz
          tar -czf $BASE_NAME.tar.gz minimal-llvm
          # Create .tar.xz
          tar -cJf $BASE_NAME.tar.xz minimal-llvm
          # Create .tar.bz2
          tar -cjf $BASE_NAME.tar.bz2 minimal-llvm
          # Create .7z
          7z a $BASE_NAME.7z minimal-llvm

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llvm21-build
          path: |
            llvm21.1.3-android-ndk-r29-linux.zip
            llvm21.1.3-android-ndk-r29-linux.tar.gz
            llvm21.1.3-android-ndk-r29-linux.tar.xz
            llvm21.1.3-android-ndk-r29-linux.tar.bz2
            llvm21.1.3-android-ndk-r29-linux.7z

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Only create release for tagged pushes
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: llvm21-build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            llvm21.1.3-android-ndk-r29-linux.zip
            llvm21.1.3-android-ndk-r29-linux.tar.gz
            llvm21.1.3-android-ndk-r29-linux.tar.xz
            llvm21.1.3-android-ndk-r29-linux.tar.bz2
            llvm21.1.3-android-ndk-r29-linux.7z
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Minimal custom LLVM 21.1.3 build for Android NDK r29 (Linux host).
            Patched with ongoing Android-specific patches from toolchain/llvm_android.
            Includes only essential directories: bin, include, lib, share (stripped and optimized).
            Available in multiple compression formats: zip, tar.gz, tar.xz, tar.bz2, 7z.
          draft: false
          prerelease: false
